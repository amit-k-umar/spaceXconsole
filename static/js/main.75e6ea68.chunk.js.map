{"version":3,"sources":["assets/spacexconsole_logo.svg","assets/logo.svg","assets/logo.png","screens/home.js","components/navbar.js","api/LatestLaunches.js","components/latest-launches.js","api/PastLaunchesAPI.js","components/past-launches.js","api/UpcomingLaunches.js","components/upcoming-launches.js","screens/launches.js","screens/launch-detail.js","api/LaunchPadMap.js","screens/launchpad-map.js","App.js","serviceWorker.js","index.js","assets/logo_x.svg"],"names":["module","exports","Home","className","to","src","logo","alt","Navbar","useState","clicked","setClicked","Logo","id","exact","onClick","getLatestLaunches","a","fetch","json","latestLaunches","console","log","LatestLaunches","useQuery","isLoading","isError","data","mission_name","links","mission_patch_small","details","getPastLaunches","page","pastLaunches","PastLaunches","map","launches","key","flight_number","patch","small","name","success","getUpcomingLaunches","upcomingLaunches","UpcomingLaunches","Launches","getLaunches","LaunchDetails","useParams","href","article","getLaunchPadMap","LaunchpadMap","Map","center","latitude","zoom","TileLayer","attribution","url","pad","Marker","position","longitude","Popup","status","locality","region","launch_attempts","launch_successes","App","StrictMode","path","component","height","window","outerHeight","params","particles","number","value","size","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75e6ea68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacexconsole_logo.4f0ee448.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.dd8520ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.e4534736.png\";","import React from 'react'\r\nimport '../css/home.css'\r\nimport logo from '../assets/logo_x.svg'\r\nimport { Link } from 'react-router-dom'\r\n// import Particles from 'react-particles-js';\r\nexport default function Home() {\r\n    return (\r\n        <div className='home' >\r\n            <p>Get started with spacex console</p>\r\n            <Link to=\"/launches\"className='button'>LAUNCHES</Link>\r\n            \r\n            <img src={logo} alt=\"\" className='logo' />\r\n                \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { NavLink,Link } from 'react-router-dom';\r\nimport Logo from '../assets/spacexconsole_logo.svg';\r\nimport logo from '../assets/logo.svg';\r\nimport {FaStream,FaTimesCircle} from 'react-icons/fa'\r\nimport '../css/navbar.css'\r\n\r\nfunction Navbar() {\r\n\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar \">\r\n            <Link to=\"/\" className=\"logo\"><img src={logo} alt=\"\"/><img src={Logo} alt=\"\"/>   </Link>\r\n            <ul className=\"nav-links hide-on-phone\" id=\"nav-links\">\r\n                <li><NavLink exact to=\"/\" className='nav-links'>Home</NavLink></li>\r\n                <li><NavLink to=\"/launches\" className='nav-links'>Launches</NavLink></li>     \r\n                <li><NavLink to=\"/launchpad-map\" className='nav-links'>Launchpad map</NavLink></li>\r\n            </ul>\r\n            <li className=\"mob-menue show-on-phone hide\" onClick={()=>setClicked(!clicked)}> {clicked?<FaTimesCircle />:<FaStream   />}</li>\r\n        </nav>\r\n        <nav className={clicked ? 'nav-menu active' : 'nav-menu'}>\r\n        <ul className='nav-menu-items' onClick={()=>setClicked(!clicked)}>\r\n          \r\n          <li><NavLink exact to=\"/\" className='nav-links'>Home</NavLink></li>\r\n          <li><NavLink to=\"/launches\" className='nav-links'>Launches</NavLink></li>     \r\n          <li><NavLink to=\"/launchpad-map\" className='nav-links'>Launchpad map</NavLink></li>\r\n          \r\n        </ul>\r\n      </nav>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","export const getLatestLaunches= async ()=>{\r\n    const latestLaunches=  await (await fetch('https://api.spacexdata.com/v3/launches/latest')).json();\r\n    console.log(latestLaunches);\r\n    return latestLaunches;\r\n}","import React from 'react'\r\nimport { getLatestLaunches } from '../api/LatestLaunches'\r\nimport { useQuery } from 'react-query';\r\nimport '../css/latestLaunches.css'\r\nexport default function LatestLaunches() {\r\n\r\n    const { isLoading, isError, data, }=useQuery('LatestLaunches',getLatestLaunches);\r\n    console.log(data);\r\n    return (\r\n        <div className=\"launches latest-launches card\">\r\n            {isLoading && \r\n                    <div className=\"loading-box\">\r\n                        <div className=\"loading-conponents loading1\"></div>\r\n                        <div className=\"loading-conponents loading2\"></div>\r\n                        <div className=\"loading-conponents loading3\"></div>\r\n                        \r\n\r\n                    </div>\r\n                 }\r\n                 {!isLoading&& !isError && <>\r\n                <h1>latest launches</h1>\r\n                <p className='latest-launches-title'>{data.mission_name} <span className=\"new\">NEW</span> </p>\r\n                <img className='latest-launches-image' src={data.links.mission_patch_small} alt=\"\"/>\r\n                 <p className=\"details\">{data.details}</p>\r\n                </>\r\n                 }\r\n        </div>\r\n    )\r\n}\r\n","export const getPastLaunches= async page=>{\r\n    const pastLaunches=  await (await fetch(`https://api.spacexdata.com/v4/launches/past`)).json();\r\n    console.log(pastLaunches);\r\n    return pastLaunches;\r\n}\r\n//?limit=30&offset=${10*(page-1)}`","import React from 'react'\r\nimport { useQuery } from 'react-query';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPastLaunches } from '../api/PastLaunchesAPI';\r\nimport '../css/loading-animation.css'\r\n\r\n\r\nexport default function PastLaunches() {\r\n\r\n//     const [page, setPage]=useState(1);\r\n//    // const [pastLaunches,setPastLaunches]=useState([]);\r\n//     const [loading, setLoading]=useState(true);\r\n    // const [end]=useState(false);\r\n    const { isLoading, data }=useQuery('pastLaunches',getPastLaunches);\r\n    console.log(data);\r\n\r\n\r\n\r\n//    useEffect(()=>{  getPastLaunches().then(\r\n//     (r)=>{setPastLaunches(r); console.log(r);setLoading(false)}\r\n// )})\r\n  \r\n\r\n\r\n    // const handleScroll=(e)=>{\r\n    //     const {scrollTop,clientHeight,scrollHeight}=e.currentTarget;\r\n    //     console.log('scrollTop');\r\n    //     console.log(scrollTop);\r\n    //     console.log('clientHeight');\r\n    //     console.log(clientHeight);\r\n    //     console.log(scrollHeight);\r\n    //     if(scrollHeight-scrollTop===clientHeight && !end)\r\n    //     {\r\n    //         setPage(prev=>prev+1)\r\n    //     }\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n      \r\n    //     const loadLaunches= async ()=>{\r\n    //         setLoading(true);\r\n    //         const newLaunches=await getPastLaunches(page);\r\n    //         if(newLaunches.length<30)\r\n    //         {   setPastLaunches(prev=>[...prev,...newLaunches]);\r\n    //             setEnd(true);\r\n    //             setLoading(false);\r\n    //             return;\r\n\r\n\r\n    //         }\r\n    //         setPastLaunches(prev=>[...prev,...newLaunches]);\r\n    //         setLoading(false);\r\n            \r\n    //     }\r\n    //     loadLaunches();\r\n        \r\n    // }, [page])\r\n    return (\r\n\r\n    \r\n        <div className=\"launches past-launches card\" >\r\n                <h1>past lauches</h1>\r\n                <div className='launches-scrollbox'  >\r\n                 \r\n                {!isLoading && data.map(\r\n               launches=>\r\n                    // {const id=launches.rocket.rocket_id;}\r\n                   <Link to={'/launches/'+launches.id} key={launches.flight_number}><li><div className=\"tile-logo\"><img src={launches.links.patch.small} alt=\"\"/></div><p className=\"tile-title\">  {launches.name} <span className={launches.success?'success':'failed'}>{launches.success?'SUCCESS':'FAILED'}</span></p></li></Link>\r\n                     )} \r\n                 {isLoading && <li>\r\n                    <div className=\"loading-box\">\r\n                        <div className=\"loading-conponents loading1\"></div>\r\n                        <div className=\"loading-conponents loading2\"></div>\r\n                        <div className=\"loading-conponents loading3\"></div>\r\n\r\n                    </div>\r\n                 </li>}\r\n                 {/* {end && <li> reached to end</li>} */}\r\n                </div>\r\n            \r\n\r\n        </div> \r\n       \r\n       \r\n    \r\n    )\r\n}\r\n","export const getUpcomingLaunches= async ()=>{\r\n    const upcomingLaunches=  await (await fetch('https://api.spacexdata.com/v4/launches/upcoming')).json();\r\n    \r\n    return upcomingLaunches;\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { getUpcomingLaunches } from '../api/UpcomingLaunches';\r\nimport { useQuery } from 'react-query';\r\nimport logo from '../assets/logo.png'\r\n\r\nexport default function UpcomingLaunches() {\r\n\r\n    // const [upcomingLaunches,setUpcomingLaunches]=useState([]);\r\n    // const [loading, setLoading]=useState(true);\r\n\r\n    const { isLoading, isError, data, }=useQuery('UpcomingLaunches',getUpcomingLaunches);\r\n    console.log(data);\r\n\r\n    //  getUpcomingLaunches().then(\r\n    //     (r)=>{setUpcomingLaunches(r); console.log(r);setLoading(false)}\r\n    // )\r\n    // useEffect(() => {\r\n      \r\n    //     const loadLaunches= async ()=>{\r\n    //         setLoading(true);\r\n    //         const newLaunches=await getUpcomingLaunches();\r\n            \r\n    //         setUpcomingLaunches([newLaunches]);\r\n    //         setLoading(false);  \r\n    //     }\r\n    //     loadLaunches();\r\n        \r\n    // })\r\n    return (\r\n        <div className=\"upcoming-launches launches card\">\r\n                <h1>upcoming launches</h1>\r\n                <div className='launches-scrollbox'>\r\n                {!isLoading&& !isError && data.map(\r\n                launches=>\r\n                //  {const id=launches.rocket.rocket_id;}\r\n                <Link to={'/launches/'+launches.id} key={launches.flight_number}><li><div className=\"tile-logo\"><img src={logo} alt=\"\"/></div><p className=\"tile-title\">  {launches.name} </p></li></Link>\r\n                )}\r\n                 {isLoading && <li>\r\n                    <div className=\"loading-box\">\r\n                        <div className=\"loading-conponents loading1\"></div>\r\n                        <div className=\"loading-conponents loading2\"></div>\r\n                        <div className=\"loading-conponents loading3\"></div>\r\n                        \r\n\r\n                    </div>\r\n                 </li>}\r\n                 \r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LatestLaunches from '../components/latest-launches'\r\nimport PastLaunches from '../components/past-launches'\r\nimport UpcomingLaunches from '../components/upcoming-launches'\r\n\r\nimport '../css/launches.css'\r\n\r\nexport default function Launches() {\r\n    return (\r\n        \r\n       \r\n\r\n        <div className='launches-box'>\r\n            \r\n            <PastLaunches />\r\n            <LatestLaunches />\r\n            <UpcomingLaunches />\r\n                   \r\n        </div>\r\n        \r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/launch-detail.css'\r\nimport { useQuery } from 'react-query';\r\n\r\n\r\n const getLaunches= async (key,id)=>{\r\n    const pastLaunches=  await (await fetch(`https://api.spacexdata.com/v4/launches/${id}`)).json();\r\n    console.log(pastLaunches);\r\n    return pastLaunches;\r\n}\r\n\r\nexport default function LaunchDetails() {\r\n    let { id } = useParams();\r\n    console.log(id);\r\n    const { isLoading, isError, data}=useQuery(['LatestLaunches',id],getLaunches);\r\n    \r\n\r\n    return (\r\n        <div className='launch-details'>\r\n            {isLoading && \r\n                    <div className=\"loading-box\">\r\n                        <div className=\"loading-conponents loading1\"></div>\r\n                        <div className=\"loading-conponents loading2\"></div>\r\n                        <div className=\"loading-conponents loading3\"></div>\r\n                    </div>\r\n            }\r\n            {!isLoading && !isError&& \r\n             <>\r\n             <div className=\"details-box\">\r\n                 <img src={data.links.patch.small} alt=\"\" className=\"detail-image\"/>\r\n                 <div className=\"discription-box\">\r\n                     <p className=\"title\">\r\n                         {data.name}\r\n\r\n                     </p>\r\n                     <div className=\"divider\"></div>\r\n                     <p className=\"discription\">\r\n                         {data.details}\r\n\r\n                     </p>\r\n                     <a href={data.links.article} className=\"read-more\">Read Full Article</a>\r\n                 </div>\r\n\r\n             </div>\r\n\r\n             \r\n           \r\n             </>\r\n            \r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n","export const getLaunchPadMap= async ()=>{\r\n    const latestLaunches=  await (await fetch('https://api.spacexdata.com/v4/launchpads')).json();\r\n    console.log(latestLaunches);\r\n    return latestLaunches;\r\n}","// import React, { Component } from 'react'\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport '../css/launchPad.css'\r\nimport { useQuery } from 'react-query';\r\nimport {getLaunchPadMap} from '../api/LaunchPadMap'\r\n\r\n\r\nimport React from 'react'\r\n\r\nexport default function LaunchpadMap() {\r\n\r\n    // const [state, setState] = useState({\r\n    //         lat: 51.505,\r\n    //         lng: -0.09,\r\n    //         zoom: 13,\r\n    //       }\r\n    //     );\r\n    \r\n    const { isLoading, isError, data }=useQuery('LaunchPadMap',getLaunchPadMap);\r\n    console.log(data);\r\n    // const [position, setPosition] = useState([51.505,-0.09])\r\n    //  setPosition([state.lat, state.lng]) ;\r\n        return (\r\n         <>\r\n            {isLoading && \r\n                <div className=\"loading-box\">\r\n                    <div className=\"loading-conponents loading1\"></div>\r\n                    <div className=\"loading-conponents loading2\"></div>\r\n                    <div className=\"loading-conponents loading3\"></div>\r\n                    \r\n\r\n                </div>\r\n             }\r\n             {!isLoading&& !isError &&\r\n\r\n\r\n                  <Map center={[data[0].latitude, 8.0817]} zoom={2}>\r\n                    <TileLayer\r\n                      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    {data.map(pad=>(\r\n                        <Marker key={pad.id} position={[pad.latitude,pad.longitude]}>\r\n                              <Popup>\r\n                      <h3>{pad.name} <span className={pad.status==='retired'?'red':'green'}>{pad.status}</span>\r\n                       </h3>\r\n                        <b>Locality:</b>{pad.locality}<br/>\r\n                        <b>Region:</b>{pad.region}<br/>\r\n                        <b>Launch Attempts:</b>{pad.launch_attempts}<br/>\r\n                        <b>Launch Success:</b>{pad.launch_successes}<br/>\r\n                      </Popup>\r\n                       </Marker>\r\n                    ))}\r\n\r\n\r\n\r\n                    {/* <Marker position={[data[0].latitude,data[0].longitude]}>\r\n                      <Popup>\r\n             <h3>{data[0].name} <span className={data[0].status=='retired'?'red':'green'}>{data[0].status}</span>\r\n             </h3>\r\n                        <b>Locality:</b>{data[0].locality}<br/>\r\n                        <b>Region:</b>{data[0].region}<br/>\r\n                        <b>Launch Attempts:</b>{data[0].launch_attempts}<br/>\r\n                        <b>Launch Success:</b>{data[0].launch_successes}<br/>\r\n                      </Popup>\r\n                    </Marker> */}\r\n                  </Map>}\r\n\r\n                  </>\r\n                )\r\n}\r\n\r\n\r\n// export default class LaunchpadMap extends Component{\r\n\r\n//     const { isLoading, isError, data, error }=useQuery('LatestLaunches',getLatestLaunches);\r\n\r\n//   state = {\r\n//     lat: 51.505,\r\n//     lng: -0.09,\r\n//     zoom: 13,\r\n//   }\r\n\r\n//   render() {\r\n//     const position = [this.state.lat, this.state.lng]\r\n//     return (\r\n//       <Map center={position} zoom={this.state.zoom}>\r\n//         <TileLayer\r\n//           attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//         />\r\n//         <Marker position={position}>\r\n//           <Popup>\r\n//             A pretty CSS3 popup. <br /> Easily customizable.\r\n//           </Popup>\r\n//         </Marker>\r\n//       </Map>\r\n//     )\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './css/App.css';\r\nimport Home from './screens/home'\r\nimport Navbar from './components/navbar'\r\nimport Launches from './screens/launches';\r\nimport LaunchDetails from './screens/launch-detail';\r\nimport LaunchpadMap from './screens/launchpad-map';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.StrictMode>\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route  exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/launches\" component={Launches} />\r\n       \r\n        <Route exact path=\"/launchpad-map\" component={LaunchpadMap} />\r\n        <Route path='/launches/:id' component={LaunchDetails}/>\r\n\r\n      </Switch>\r\n      \r\n    </Router>\r\n    <div className=\"par-background\"><Particles \r\n        height={window.outerHeight}\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: 50\r\n            },\r\n            size: {\r\n              value: 3\r\n            }\r\n          },\r\n      }}\r\n      /> \r\n       </div>\r\n    \r\n  </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_x.d04e2526.svg\";"],"sourceRoot":""}